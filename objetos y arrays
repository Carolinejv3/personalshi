Normalmente al usar arrays se almacenan los mismos tipos de datos en uno pero en JavaScript no es necesario asÃ­ que
se puede hacer esto:

let valores = ["Test", 7, 12.3, false];

Tambien se pueden almacenar arrays dentro de otros arrays

let nombres = [["Olivia", "Emma", "Mia", "Sofia"], ["William", "James", "Daniel"]];
console.log(nombres[0]); // -> ["Olivia", "Emma", "Mia", "Sofia"]
console.log(nombres[0][1]); // -> Emma
console.log(nombres[1][1]); // -> James

let nombresmujeres = nombres[0];
console.log(nombresmujeres[0]); // -> Olivia
console.log(nombresmujeres[2]); // -> Mia

En JavaScript los arrays anidados no tienen que ser de la misma longitud, al menos no en JavaScript.

let arrayconocidos = [["Caroline", "Osmairy", "Francisco", "Wilmer"], ["Rosario", "Sebastian", "Zara", "Henry"]];
console.log(arrayconocidos[0]);
console.log(arrayconocidos[1][0]);


    let usuarios = [

        {
        usuarioname:"Osmairy",
        usuarioapellido: "Martinez",
        usuarioedad: 17,
        usuarioemail: "osmairymartinez882@gmail.com"
        },
        
        {
        usuarioname: "Caroline",
        usuarioapellido: "Jimenez",
        usuarioedad: 17,
        usuarioemail:"carolinejimenez882@gmail.com"
        }
        
         ];

            console.log(usuarios[0].usuarioapellido);

        usuarios[2] = {

        usuarioname: "Zara",
        usuarioapellido: "Cepeda",
        usuarioedad: 10,
        usuarioemail: "zaracepeda@gmail.com"
        }
        
        console.log(usuarios[2].usuarioname);
        console.log(usuarios[0].usuarioemail);

        
el instanceof sirve para saber si es un array o no. Se expresa en verdadero o falso. 

let numeros = [1,2,3,4,5,6];
let numero = ["1", "2", "3", "4", "5", "6"];
let num = "numero";

console.log(typeof numeros);
console.log(typeof numero);
console.log(typeof num);

console.log(numeros instanceof Array);
console.log(numero instanceof Array);
console.log(num instanceof Array);
